
EKS 클러스터에서 NLB 타입의 K8S Service를 생성 시 Worker node의 Security Group에 'kubernetes.io/rule/nlb/health', 'kubernetes.io/rule/nlb/client'에 대한 Ingress rule이 너무 많이 생성되어 규칙 생성을 방지하는 방안에 대해 문의를 주셨습니다.

먼저 고객님께서 적용하셨던 방법과 같이 Manual로 Ingress rule(0.0.0.0/0, port: 30000-32767)을 추가하고 각 NLB에 대한 개별 Rule을 삭제하신 경우에는 이미 확인하신 바와 같이 Controller에 의해 기존의 Rule들이 다시 원복됩니다. 

관련하여 CloudTrail 이벤트 내역을 조회한 결과 다음과 같이 EKS 서비스에 의해서 NLB에 대한 SG rule을 추가하는 'AuthorizeSecurityGroupIngress' API가 수행된 것을 확인할 수 있었습니다.

```
    "eventTime": "2022-11-18T07:58:05Z",
    "eventSource": "ec2.amazonaws.com",
    "eventName": "AuthorizeSecurityGroupIngress",
    "awsRegion": "ap-northeast-2",
    "sourceIPAddress": "eks.amazonaws.com",
    "userAgent": "eks.amazonaws.com",
    "requestParameters": {
        "groupId": "sg-01a02342a79a5fea5",
        "ipPermissions": {
            "items": [
                {
                    "ipProtocol": "tcp",
                    "fromPort": 31005,
                    "toPort": 31005,
                    "groups": {},
                    "ipRanges": {
                        "items": [
                            {
                                "cidrIp": "0.0.0.0/0",
                                "description": "kubernetes.io/rule/nlb/client=a6b399b25f64149c5aa3624db1fa66f7"
                            }
                        ]
                    },
                    "ipv6Ranges": {},
                    "prefixListIds": {}
                }
            ]
        }
    },    
```

이렇게 NLB에 대한 Security group Rule이 계속 증가하는 경우 limit에 도달할 수도 있는 위험성에 대해 염려를 하시어 이를 대비하고자 Controller에 의해 NLB Rule이 자동으로 생성되지 않도록 하는 방안을 문의해주셨고, 확인한 결과 AWS Load balancer controller를 이용하면 가능한 것을 확인할 수 있었습니다.

현재는 NLB 타입의 Service를 생성 시 AWS Load balancer controller를 사용하지 않고 Kubernetes의 In-tree Service controller를 사용하고 계신 것으로 판단됩니다. AWS에서는 ALB/NLB에 대한 오퍼레이션을 유연하게 지원하고자 AWS Load balancer controller라는 오픈소스 프로젝트 [1]를 통해 Kubernetes의 기본 service controller보다 AWS 리소스에 대해 더 다양한 기능을 제공하고 있습니다.

따라서, AWS Load balancer controller를 설치하시고 Service를 생성할 때 다음과 같이 'service.beta.kubernetes.io/aws-load-balancer-type: external' annotation을 추가하여 AWS Load balancer controller를 이용하여 NLB를 생성 [2]하실 수 있습니다.

sample) 
---------------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: nlb-sample-service
  namespace: nlb-sample-app
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: LoadBalancer
  selector:
    app: nginx
---------------------------------------------------------------------------


그리고 AWS load balancer controller가 NLB가 생성될 때마다 Security group에 Rule을 추가하지 않도록 다음의 annotation을 추가 [3]하실 수 있습니다.

---------------------------------------------------------------------------
  service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules: "false"
---------------------------------------------------------------------------

위와 같은 annotation을 추가 시 Controller가 Security group rule을 자동으로 추가/삭제하지 않기 때문에 꼭 Worker node의 Security group에 직접 Ingress rule을 넣어주셔야 함을 유의해주시기 바랍니다.

다시 한번 정리하자면 현재 Kubernetes의 In-tree service controller에 의해서 NLB와 관련된 Security group rule이 자동으로 추가/삭제됩니다. 자동으로 Rule이 추가/삭제되지 않도록 하기 위해서는 AWS Load balancer controller를 이용하여 NLB타입의 서비스를 생성하셔야 하고, 이 때, 'service.beta.kubernetes.io/aws-load-balancer-manage-backend-security-group-rules: false' annotation을 추가하여 자동 제어 기능을 diable 할 수 있습니다.

제 답변이 도움이 되었길 바라고 관련하여 문의사항이 있으면 연락주시기 바랍니다.

즐거운 주말되세요.
감사합니다.

References:
[1] https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/nlb/ 
[2] https://docs.aws.amazon.com/eks/latest/userguide/network-load-balancing.html 
[3] https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.4/guide/service/annotations/#manage-backend-sg-rules 
